//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    bam = null
    bai = null
    reference = null
    sample = null
    sample_sheet = null
    sanitize_fastq = false
    benchmark = false
    max_bp = 0
    min_len = 200
    max_len = 999999
    min_qual = 10
    min_sv_length = 30
    max_sv_length = 100000
    min_read_support = "auto"
    min_read_support_limit = 2
    max_cluster_bias_INS = 100
    diff_ratio_merging_INS = 0.3
    max_cluster_bias_DEL = 200
    diff_ratio_merging_DEL = 0.5
    target_bedfile = "NO_TARGET"
    sv_types = "DEL,INS"
    out_dir = "output"
    wfversion = "shaab63a246"
    aws_image_prefix = null
    aws_queue = null
    threads = 2
    // Truthset resource URLs
    truthset_vcf = "https://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/analysis/NIST_SVs_Integration_v0.6/HG002_SVs_Tier1_v0.6.vcf.gz"
    truthset_index = "https://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/analysis/NIST_SVs_Integration_v0.6/HG002_SVs_Tier1_v0.6.vcf.gz.tbi"
    truthset_bed = "https://ftp-trace.ncbi.nlm.nih.gov/giab/ftp/data/AshkenazimTrio/analysis/NIST_SVs_Integration_v0.6/HG002_SVs_Tier1_v0.6.bed"
    report_name = "report"

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf'

    wf {
      example_cmd = [
          "--fastq test_data/reads.fastq.gz",
          "--reference test_data/chr20_human_g1k_v37_part.fasta.gz",
          "--target_bedfile test_data/target.bed",
          "--benchmark"
      ]
    }
}

manifest {
    name            = 'epi2me-labs/wf-human-sv'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-human-sv'
    description     = 'Human Structural Variation calling workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
}

executor {
    $local {
        cpus = 2
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wf_human_sv {
        container = "ontresearch/wf-human-sv:${params.wfversion}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // profile using conda environments
    conda {
        docker.enabled = false
        process {
            withLabel:wf_human_sv {
                conda = "${projectDir}/environment.yaml"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
             cacheDir = ""
             useMamba = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wf_human_sv {
                container = "${params.aws_image_prefix}-wf-human-sv:${params.wfversion}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}



timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
